name: Build

on:
  push:
  pull_request:

jobs:

  test:
    name: Test ${{ matrix.mode }}

    strategy:
      fail-fast: false
      matrix:
        mode: [ '', '--release' ]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, llvm-tools-preview, rust-src
          profile: default

      # install QEMU
      - name: Install QEMU
        run: sudo apt update && sudo apt install qemu-system-x86
      - name: "Print QEMU Version"
        run: qemu-system-x86_64 --version

      - name: Build and run all tests
        run: |
            set -e
            export RUST_HOST=$(rustc --version --verbose | grep 'host:' | awk '{ print $2 }')
            echo "host: $RUST_HOST"
            # maybe the `grep Executable` stops working with some rust version
            cargo t --no-run 2>&1 |       # only build tests, redirect the cargo output from stderr to stdout
            grep Executable |             # the last lines in the build output start with 'Executable' and list the built test executables
            sed -rn 's/.*\((.*)\)/\1/p' | # extract the executable files from the output
            xargs -L1 cargo run -Zbuild-std --target=$RUST_HOST --package boot ${{ matrix.mode }} -- # this is the build command from '.cargo/config.toml'
            
  check:
    name: Check

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, llvm-tools-preview, rust-src
          profile: default

      - name: "Run `cargo check`"
        uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, llvm-tools-preview, rust-src
          profile: default
      - name: Run `cargo fmt --all -- --check`
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, llvm-tools-preview, rust-src
          profile: default
      - name: Run `cargo clippy`
        uses: actions-rs/cargo@v1
        with:
          command: clippy
